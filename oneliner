#!/bin/bash

version="0.4.0-alpha"

#    usage: git [-f | --file <file_path>] [-p | -print] [-c | --copy]
#               [-v | --version] [-s | --save] [-h | --help]

help_guide() {
    printf "%s" "\
    usage: git [-f | --file <file_path>] [-options <value>]

    Options:            Expected value      Description
        -f, --file      source path         path to the source file with the code to convert
        -o, --output                        save the output to file oneliner_out.txt in the 
                                            current working directory
        -p, --print     on/off              verbose output in CLI
        -c, --copy      on/off              copy the output in clipboard 
        -h, --help                          display this help and exit
        -v, --version                       show version for Oneliner

        Report bugs/issues to https://github.com/Surajkumar88/Oneliner/issues
      "
    printf "\n"
}

tmp_file_name="one_line_tmp.sh"
tmp_file_path=$(pwd)"/"$tmp_file_name

while [[ "$1" ]]; do
    case $1 in 
        "-f" | "--file")
            case $2 in
                "-"*) break ;;
                *)  if [[ -n "$2" ]]; then
                        file_path="$2"
                        if [[ -e $tmp_file_path ]]; then
                            rm -rf $tmp_file_path
                        fi
                        tmp=$(cat $file_path | awk '{$1=$1;print}'); echo -n "$tmp" > $tmp_file_path
                        IFS=$'\n'
                        final=""
                        for LINE in $(cat "$tmp_file_path")
                            do final=$final$LINE" ;"
                                #echo "$LINE"
                        done
                        size=${#final}  ##size of the final line of command
                        rm -rf "$tmp_file_path"
                        #echo "$size"
                        final="${final[@]:13:$size-15}" 
                    fi
                ;;
            esac
        ;;
        "-c" | "--copy")
            case $2 in
                "off") break ;;
                "on" | "-"* | *) 
                    if [[ -n $final ]]; then
                        echo "$final" | pbcopy
                        echo "Code copied to clipboard!!!"
                    fi
                ;;
            esac
        ;;
        "-p" | "--print")
                case $2 in 
                "off") break ;;
                "on" | "-"* | *) 
                    if [[ -n $final ]]; then
                        echo $final
                    fi
                ;;
            esac 
        ;;
        "-v" | "--version")
            echo "Oneliner v"$version
            break
        ;;
        "-o" | "--output")
            echo $final >> oneliner_out.txt
            printf "Output saved to current working directory!!!"
        ;;
        "-h" | "--help")
            help_guide
            break
    esac
    shift
done

