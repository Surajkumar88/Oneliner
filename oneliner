#!/bin/bash

version="0.8.0-beta"



help_guide() {
    #alternate longform usage: usage: git [-f | --file <file_path>] [-p | -print] [-c | --copy] [-v | --version] [-s | --save] [-h | --help]
    printf "%s" "\
    usage: git [-f | --file <file_path>] [-options <value>]

    Options:            Expected value      Description
        -f, --file      source path         path to the source file with the code to convert
        -o, --output    file path           save the output to file oneliner_out.txt in the given
                                            path (defaults to current working directory)
        -p, --print     on/off              verbose output in CLI
        -c, --copy      on/off              copy the output in clipboard 
        -h, --help                          display this help and exit
        -v, --version                       show version for Oneliner

        Report bugs/issues to https://github.com/Surajkumar88/Oneliner/issues
      " 
      printf "\n"
    exit 0
}

init_default() {
    tmp_file_name="one_line_tmp.sh"
    tmp_file_path=$(pwd)"/"$tmp_file_name

    to_copy="off"
    to_print="off"
    output_file_name="oneliner_out.txt"
    output_file_path=$(pwd)"/"$output_file_name
}

converter(){
    if [[ -e $tmp_file_path ]]; then
        rm -rf $tmp_file_path
    fi
    if [[ -n $file_path && $file_path != "-"* ]]; then 
        tmp=$(cat $file_path | awk '{$1=$1;print}'); echo -n "$tmp" > $tmp_file_path
        IFS=$'\n'
        final=""
        for LINE in $(cat "$tmp_file_path")
            do final=$final$LINE" ;"
                #echo "$LINE"
        done
        size=${#final}
        rm -rf "$tmp_file_path"
        final="${final[@]:13:$size-15}" 
    else
        echo $file_path": no such file or directory"
    fi
}

out_to_file() {
    if [[ $to_out != "on" ]]; then
        exit 1
    fi
    if [[ -e $output_file_path ]]; then
        rm -rf $output_file_path
    fi
    echo $final >> $output_file_path
    printf "Output saved to $output_file_path !!! \n"
}

printer() {
    case $to_print in 
        "off") ;;
        "on" | "-"* | *) 
            if [[ -n $final ]]; then
                echo $final
            fi
    esac
}

copy() {
    case $to_copy in
        "off") ;;
        "on" | "-"* | *) 
            if [[ -n $final ]]; then
                echo "$final" | pbcopy
                echo "Code copied to clipboard!!!"
            fi
        ;;
    esac
}

get_args() {
        
    while [[ "$1" ]]; do
        case $1 in 
            "-f" | "--file") file_path="$2" ;;
            "-c" | "--copy") to_copy="$2" ;;
            "-o" | "--output") 
                if [[ -n $2 ]]; then output_file_path="$2"/oneliner_out.txt ; fi
                to_out="on"
            ;;
            "-p" | "--print") to_print="$2" ;;
            "-v" | "--version")
                echo "Oneliner v"$version
                exit 1
            ;;
            "-h" | "--help")
                help_guide
        esac
        shift
    done
}

main() {
    init_default
    get_args "$@"
    converter
    printer
    copy 
    out_to_file
}

main "$@"
